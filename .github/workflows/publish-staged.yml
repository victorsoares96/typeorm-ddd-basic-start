name: Publish Staged

on:
  pull_request:
    types: [opened, reopened]

env:
  STAGED_APP_NAME: ${{secrets.HEROKU_APP_NAME}}-${{github.event.number}}
  DEV_APP_NAME: ${{secrets.HEROKU_APP_NAME}}-dev

jobs:
  createApplication:
    name: "Create Application"
    runs-on: ubuntu-latest

    steps:
      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{env.STAGED_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          justlogin: true

      - name: Create Heroku app
        if: github.event.action == 'opened'
        run: heroku apps:create ${{env.STAGED_APP_NAME}}

      - name: Set buildpacks
        if: github.event.action == 'opened'
        run: heroku buildpacks:add heroku/nodejs --app ${{env.STAGED_APP_NAME}}

  createDatabase:
    name: "Create Database"
    runs-on: ubuntu-latest
    needs: createApplication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{env.STAGED_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          justlogin: true

      - name: Create Database
        if: github.event.action == 'opened'
        run: heroku addons:create heroku-postgresql:hobby-dev --app ${{env.STAGED_APP_NAME}}

      - name: Waiting Database Provision
        if: github.event.action == 'opened'
        run: heroku pg:wait --app ${{env.STAGED_APP_NAME}}

      - name: Create File With Database Credentials
        run: heroku pg:credentials:url --app ${{env.STAGED_APP_NAME}} > database_credentials

      - name: Handle Database Credentials File to a valid format
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('./src/scripts/get_db_credentials.js')
            await script()

      - name: Copy database environment variables to Heroku app
        run: |
          cat database_credentials | xargs heroku config:set --app=${{env.STAGED_APP_NAME}}
      - name: Copy Dev Database Data to Staged Database
        run: heroku pg:copy ${{env.DEV_APP_NAME}}::DATABASE DATABASE --app ${{env.STAGED_APP_NAME}} --confirm ${{env.STAGED_APP_NAME}}

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: createDatabase

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{env.STAGED_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          justlogin: true

      - name: Add Heroku remote
        run: heroku git:remote --app ${{env.STAGED_APP_NAME}}

      - name: Push to Heroku
        run: git push heroku ${{github.head_ref}}:master

      - name: Running migrations
        run: "heroku run --app ${{env.STAGED_APP_NAME}} yarn prod:typeorm:migrate"

      - name: Add comment to PR
        run: |
          gh pr comment ${{ github.event.number }} --body '[Heroku app](https://dashboard.heroku.com/apps/${{env.STAGED_APP_NAME}}): https://${{env.STAGED_APP_NAME}}.herokuapp.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
