name: Publish Staged

on:
  pull_request:
    types: [opened, reopened]

jobs:
  publish:
    name: "Publish"
    runs-on: ubuntu-latest
    env:
      HEROKU_APP_NAME: staged-${{ github.head_ref }}-${{ github.event.number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ github.event.action == 'closed' && 1 || 0 }}
          ref: ${{ github.event.action != 'closed' && github.head_ref || '' }}
      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{env.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          justlogin: true
      - name: Create File With Database Credentials
        run: heroku pg:credentials:url --app ${{ env.HEROKU_APP_NAME }} > database_credentials
      - name: Handle Database Credentials File to a valid format
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('./src/scripts/get_db_credentials.js')
            await script()
      - name: Copy database environment variables to Heroku app
        run: |
          cat database_credentials | xargs heroku config:set --app=${{ env.HEROKU_APP_NAME }}
      - name: Create Dev Database Backup
        run: heroku pg:backups:capture --app typeorm-ddd-basic-start-dev
      - name: Create file with dev database backup info
        run: heroku pg:backups:info --app typeorm-ddd-basic-start-dev > db_backup_info
      - name: Get dev database backup id
        uses: actions/github-script@v6
        id: get_db_backup-id
        with:
          script: |
            const script = require('./src/scripts/get_db_backup-id.js')
            const backupId = await script()
            return backupId
          result-encoding: string
      - name: Clone Dev Database to ${{ env.HEROKU_APP_NAME }} Database
        run: heroku pg:backups:restore typeorm-ddd-basic-start-dev::${{ steps.get_db_backup-id.outputs.results }} DATABASE_URL --app ${{ env.HEROKU_APP_NAME }} --confirm ${{ env.HEROKU_APP_NAME }}
      - name: Add Heroku remote
        run: heroku git:remote --app ${{env.HEROKU_APP_NAME}}
      - name: Push to Heroku
        run: git push heroku ${{github.head_ref}}:master
      - name: Running migrations
        run: "heroku run --app ${{ env.HEROKU_APP_NAME }} yarn prod:typeorm:migrate"
      - name: Add comment to PR
        if: github.event.action == 'opened'
        run: |
          gh pr comment ${{ github.event.number }} --body '[Heroku app](https://dashboard.heroku.com/apps/${{ env.HEROKU_APP_NAME }}): https://${{ env.HEROKU_APP_NAME }}.herokuapp.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
