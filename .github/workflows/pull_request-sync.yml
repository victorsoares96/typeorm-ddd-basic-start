name: Pull Request Synchronize

on:
  pull_request:
    types: [synchronize]

env:
  STAGED_APP_NAME: ${{secrets.HEROKU_APP_NAME}}-${{github.event.number}}

jobs:
  validate:
    name: "Validate"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Linting
        run: yarn lint

      - name: Type Check
        run: yarn type-check

      - name: Unit Testing
        run: yarn test:coverage

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
          directory: coverage
          fail_ci_if_error: true

      - name: Build
        run: yarn build

  publish:
    name: "Publish"
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip:publish') && github.event.pull_request.head.ref != 'renovate/*' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get Pull Request Name
        run: echo ${{ github.event.pull_request.head.ref }} && echo ${{ github.head_ref == 'renovate/*' }} && echo ${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{env.STAGED_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          justlogin: true

      - name: Add Heroku remote
        run: heroku git:remote --app ${{env.STAGED_APP_NAME}}

      - name: Push to Heroku
        run: git push heroku ${{github.head_ref}}:master --force

      - name: Running migrations
        run: "heroku run --app ${{env.STAGED_APP_NAME}} yarn prod:typeorm:migrate"

      - name: Remove publish errors label
        if: ${{contains(github.event.pull_request.labels.*.name, 'sync:publish:error')}}
        run: |
          gh pr edit --remove-label sync:publish:error
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Mark as Published
        run: |
          gh pr comment ${{ github.event.number }} --body 'Republish Successfully: https://${{env.STAGED_APP_NAME}}.herokuapp.com' | gh pr edit --add-label published
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publishFailed:
    name: "Publish failed"
    runs-on: ubuntu-latest
    needs: publish
    if: always() && !contains(github.event.pull_request.labels.*.name, 'skip:publish') && needs.publish.result == 'failure'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Mark as publish failed
        run: |
          gh pr comment ${{ github.event.number }} --body 'Republish failed: https://${{env.STAGED_APP_NAME}}.herokuapp.com' | gh pr edit --add-label sync:publish:error
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove published label
        if: ${{contains(github.event.pull_request.labels.*.name, 'published')}}
        run: |
          gh pr edit --remove-label published
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
