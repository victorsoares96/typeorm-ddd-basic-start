name: release staged

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  validate:
    name: "Validate"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Formatting
        run: yarn prettier:format
      - name: Linting
        run: yarn lint:fix
      - name: Type Check
        run: yarn type-check
      - name: Unit Testing
        run: yarn test:coverage
      - name: Build
        run: yarn build

  publish:
    name: "Publish"
    runs-on: ubuntu-latest
    needs: validate
    env:
      HEROKU_APP_NAME: typeorm-ddd-basic-start-${{ github.head_ref }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ github.event.action == 'closed' && 1 || 0 }}
          ref: ${{ github.event.action != 'closed' && github.head_ref || '' }}
      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{env.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          justlogin: true
      - name: Create Heroku app
        if: github.event.action == 'opened'
        run: heroku apps:create ${{ env.HEROKU_APP_NAME }}
      - name: Set buildpacks
        if: github.event.action == 'opened'
        run: heroku buildpacks:add heroku/nodejs
      - name: Set addons
        if: github.event.action == 'opened'
        run: heroku addons:create heroku-postgresql:hobby-dev
      - name: Get Database Credentials
        if: github.event.action == 'opened'
        run: |
          heroku pg:credentials:url --app ${{ env.HEROKU_APP_NAME }} > database_credentials
          | yarn get-db-credentials
      - name: Copy database environment variables to Heroku app
        if: github.event.action == 'opened'
        run: |
          cat database_credentials | xargs heroku config:set --app=${{ env.HEROKU_APP_NAME }}
      - name: Add Heroku remote
        run: heroku git:remote --app ${{env.HEROKU_APP_NAME}}
      - name: Push to Heroku
        run: git push heroku ${{github.head_ref}}:master
      - name: Running migrations
        run: "heroku run --app ${{ env.HEROKU_APP_NAME }} yarn prod:typeorm:migrate"
      - name: Add comment to PR
        if: github.event.action == 'opened'
        run: |
          gh pr comment ${{ github.event.number }} --body '[Heroku app](https://dashboard.heroku.com/apps/${{ env.HEROKU_APP_NAME }}): https://${{ env.HEROKU_APP_NAME }}.herokuapp.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Destroy Heroku app
        if: github.event.action == 'closed'
        run: heroku apps:destroy --app=${{ env.HEROKU_APP_NAME }} --confirm=${{ env.HEROKU_APP_NAME }}
